{
  "version": 3,
  "sources": ["../../cli-kit/src/private/node/constants.ts", "../../../node_modules/.pnpm/env-paths@3.0.0/node_modules/env-paths/index.js"],
  "sourcesContent": ["import {joinPath} from '../../public/node/path.js'\nimport envPaths from 'env-paths'\n\nconst identifier = 'shopify-cli'\n\nconst cacheFolder = () => {\n  if (process.env.XDG_CACHE_HOME) return process.env.XDG_CACHE_HOME\n  return envPaths(identifier).cache\n}\n\nexport const logsFolder = () => {\n  return envPaths(identifier).log\n}\n\nexport const environmentVariables = {\n  alwaysLogAnalytics: 'SHOPIFY_CLI_ALWAYS_LOG_ANALYTICS',\n  alwaysLogMetrics: 'SHOPIFY_CLI_ALWAYS_LOG_METRICS',\n  deviceAuth: 'SHOPIFY_CLI_DEVICE_AUTH',\n  enableCliRedirect: 'SHOPIFY_CLI_ENABLE_CLI_REDIRECT',\n  env: 'SHOPIFY_CLI_ENV',\n  firstPartyDev: 'SHOPIFY_CLI_1P_DEV',\n  noAnalytics: 'SHOPIFY_CLI_NO_ANALYTICS',\n  partnersToken: 'SHOPIFY_CLI_PARTNERS_TOKEN',\n  runAsUser: 'SHOPIFY_RUN_AS_USER',\n  serviceEnv: 'SHOPIFY_SERVICE_ENV',\n  skipCliRedirect: 'SHOPIFY_CLI_SKIP_CLI_REDIRECT',\n  spinInstance: 'SPIN_INSTANCE',\n  themeToken: 'SHOPIFY_CLI_THEME_TOKEN',\n  unitTest: 'SHOPIFY_UNIT_TEST',\n  verbose: 'SHOPIFY_FLAG_VERBOSE',\n  noThemeBundling: 'SHOPIFY_CLI_NO_THEME_BUNDLING',\n  bundledThemeCLI: 'SHOPIFY_CLI_BUNDLED_THEME_CLI',\n  // Variables to detect if the CLI is running in a cloud environment\n  codespaces: 'CODESPACES',\n  codespaceName: 'CODESPACE_NAME',\n  codespacePortForwardingDomain: 'GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN',\n  gitpod: 'GITPOD_WORKSPACE_URL',\n  cloudShell: 'CLOUD_SHELL',\n  spin: 'SPIN',\n  spinAppPort: 'SERVER_PORT',\n  spinAppHost: 'SPIN_APP_HOST',\n  organization: 'SHOPIFY_CLI_ORGANIZATION',\n  identityToken: 'SHOPIFY_CLI_IDENTITY_TOKEN',\n  refreshToken: 'SHOPIFY_CLI_REFRESH_TOKEN',\n  otelURL: 'SHOPIFY_CLI_OTEL_EXPORTER_OTLP_ENDPOINT',\n  themeKitAccessDomain: 'SHOPIFY_CLI_THEME_KIT_ACCESS_DOMAIN',\n}\n\nexport const defaultThemeKitAccessDomain = 'theme-kit-access.shopifyapps.com'\n\nexport const systemEnvironmentVariables = {\n  backendPort: 'BACKEND_PORT',\n}\n\nexport const pathConstants = {\n  executables: {\n    dev: '/opt/dev/bin/dev',\n  },\n  directories: {\n    cache: {\n      path: () => {\n        return cacheFolder()\n      },\n      vendor: {\n        path: () => {\n          return joinPath(cacheFolder(), 'vendor')\n        },\n        binaries: () => {\n          return joinPath(cacheFolder(), 'vendor', 'binaries')\n        },\n      },\n    },\n  },\n}\n\nexport const sessionConstants = {\n  expirationTimeMarginInMinutes: 4,\n}\n\nexport const bugsnagApiKey = '9e1e6889176fd0c795d5c659225e0fae'\n\nexport const reportingRateLimit = {limit: 300, timeout: {days: 1}}\n\nexport const themeKitAccessDomain =\n  process.env[environmentVariables.themeKitAccessDomain] ?? defaultThemeKitAccessDomain\n", "import path from 'node:path';\nimport os from 'node:os';\nimport process from 'node:process';\n\nconst homedir = os.homedir();\nconst tmpdir = os.tmpdir();\nconst {env} = process;\n\nconst macos = name => {\n\tconst library = path.join(homedir, 'Library');\n\n\treturn {\n\t\tdata: path.join(library, 'Application Support', name),\n\t\tconfig: path.join(library, 'Preferences', name),\n\t\tcache: path.join(library, 'Caches', name),\n\t\tlog: path.join(library, 'Logs', name),\n\t\ttemp: path.join(tmpdir, name),\n\t};\n};\n\nconst windows = name => {\n\tconst appData = env.APPDATA || path.join(homedir, 'AppData', 'Roaming');\n\tconst localAppData = env.LOCALAPPDATA || path.join(homedir, 'AppData', 'Local');\n\n\treturn {\n\t\t// Data/config/cache/log are invented by me as Windows isn't opinionated about this\n\t\tdata: path.join(localAppData, name, 'Data'),\n\t\tconfig: path.join(appData, name, 'Config'),\n\t\tcache: path.join(localAppData, name, 'Cache'),\n\t\tlog: path.join(localAppData, name, 'Log'),\n\t\ttemp: path.join(tmpdir, name),\n\t};\n};\n\n// https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html\nconst linux = name => {\n\tconst username = path.basename(homedir);\n\n\treturn {\n\t\tdata: path.join(env.XDG_DATA_HOME || path.join(homedir, '.local', 'share'), name),\n\t\tconfig: path.join(env.XDG_CONFIG_HOME || path.join(homedir, '.config'), name),\n\t\tcache: path.join(env.XDG_CACHE_HOME || path.join(homedir, '.cache'), name),\n\t\t// https://wiki.debian.org/XDGBaseDirectorySpecification#state\n\t\tlog: path.join(env.XDG_STATE_HOME || path.join(homedir, '.local', 'state'), name),\n\t\ttemp: path.join(tmpdir, username, name),\n\t};\n};\n\nexport default function envPaths(name, {suffix = 'nodejs'} = {}) {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof name}`);\n\t}\n\n\tif (suffix) {\n\t\t// Add suffix to prevent possible conflict with native apps\n\t\tname += `-${suffix}`;\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\treturn macos(name);\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows(name);\n\t}\n\n\treturn linux(name);\n}\n"],
  "mappings": "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",
  "names": ["process"]
}
